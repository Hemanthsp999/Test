#Tool Name :- Tool-X v2.0 
# Author :- Rajkumar Dusad
# Date :- 1/11/2017
# Aex Software's :- Tool-X is a automatic tool installer. Specially made for termux and GNURoot Debian terminal.

import os
import sys
from time import sleep

if os.path.exists("/data/data/com.termux/files/usr/bin/pkg"):
    systm="termux"
elif os.path.exists("/usr/bin/apt"):
    if os.path.exists("/usr/lib/sudo"):
        systm="ubuntu"
    else:
        systm="debian"
elif os.path.exists("/bin/apt"):
    if os.path.exists("/usr/lib/sudo"):
        systm="ubuntu"
    else:
        systm="debian"

def Aex():
	Aex=sys.exit()

def ox():
	ox=os.system("clear")

def Er():
  if systm=="termux":
	print("\033[1;31m\007")
	sys.stdout.write(open(".sc/.Toolo/.er.aex").read())
	print("\033[1;32m")
	sys.stdout.write(open(".sc/.Toolo/.er0.aex").read())
	print("\033[1;31m")
	sys.stdout.write(open(".sc/.Toolo/.er.aex").read())
	print("\033[1;m")
	sleep(1)

  else:
	print("\033[1;31m\007")
	sys.stdout.write(open(".sc/.Toolo/.eru.aex").read())
	print("\033[1;32m")
	sys.stdout.write(open(".sc/.Toolo/.er0u.aex").read())
	print("\033[1;31m")
	sys.stdout.write(open(".sc/.Toolo/.eru.aex").read())
	print("\033[1;m")
	sleep(1)



def op():
  if systm=="termux":
	print("\t")
	print('''\007


\033[1;33m
          _____           _    __  __
         |_   _|__   ___ | |   \ \/ /
           | |/ _ \ / _ \| |____\  /
           | | (_) | (_) | |____/  \     
           |_|\___/ \___/|_|   /_/\_\ \033[1;91mv2.0
''')
	print("\033[1;36m\007")
	sys.stdout.write(open(".sc/.Toolo/.T0.aex").read())
	print("\033[1;33m")
	sys.stdout.write(open(".sc/.Toolo/.T1.aex").read())
	print("\033[1;36m")
	sys.stdout.write(open(".sc/.Toolo/.T2.aex").read())
	print("\033[1;32m")
	sys.stdout.write(open(".sc/.Toolo/.C.aex").read())
	print("\033[1;36m")
	sys.stdout.write(open(".sc/.Toolo/.T0.aex").read())
	print("\033[1;33m")
	sys.stdout.write(open(".sc/.Toolo/.T3.aex").read())
	print("\033[1;36m")
	sys.stdout.write(open(".sc/.Toolo/.T0.aex").read())
	print("\033[1;m\n")

  else:
	print('''\007


\033[1;33m
               _____           _    __  __
              |_   _|__   ___ | |   \ \/ /
                | |/ _ \ / _ \| |____\  /
                | | (_) | (_) | |____/  \     
                |_|\___/ \___/|_|   /_/\_\ \033[1;31mv2.0
''')
	print("\033[1;36m\007")
	sys.stdout.write(open(".sc/.Toolo/.T0u.aex").read())
	print("\033[1;33m")
	sys.stdout.write(open(".sc/.Toolo/.T1u.aex").read())
	print("\033[1;36m")
	sys.stdout.write(open(".sc/.Toolo/.T2u.aex").read())
	print("\033[1;32m")
	sys.stdout.write(open(".sc/.Toolo/.C.aex").read())
	print("\033[1;36m")
	sys.stdout.write(open(".sc/.Toolo/.T0u.aex").read())
	print("\033[1;33m")
	sys.stdout.write(open(".sc/.Toolo/.T3u.aex").read())
	print("\033[1;36m")
	sys.stdout.write(open(".sc/.Toolo/.T0u.aex").read())
	print("\033[1;m\n")

def inst():
	os.system("cd .tools && python2 .inst.aex")
	Toolx()

def inst1():
	os.system("cd .tools && python2 .inst1.aex")
	Toolx()

def Toolx():
	os.system("clear")
	op()
	Toolo = raw_input("\033[1;33m >>>  \033[1;m")
	usr=open(".tools/uip.aex","w")
	usr.write(Toolo)
	usr.close()
	if Toolo == "1":
		os.system("python2 .cat1.aex")
		Toolx()
	elif Toolo == "2":
		os.system("python2 .cat2.aex")
		Toolx()
	elif Toolo == "3":
		os.system("python2 .cat3.aex")
		Toolx()
	elif Toolo == "4":
		os.system("python2 .cat4.aex")
		Toolx()
	elif Toolo == "5":
		os.system("python2 .cat5.aex")
		Toolx()
	elif Toolo == "6":
		os.system("python2 .cat6.aex")
		Toolx()
	elif Toolo == "7":
		os.system("python2 .cat7.aex")
		Toolx()
	elif Toolo == "8":
		os.system("python2 .cat8.aex")
		Toolx()
	elif Toolo == "9":
		os.system("python2 .cat9.aex")
		Toolx()
	elif Toolo == "10":
		os.system("python2 .cat10.aex")
		Toolx()
	elif Toolo == "11":
		os.system("python2 .cat11.aex")
		Toolx()
	elif Toolo == "12":
		os.system("python2 .cat12.aex")
		Toolx()
	elif Toolo == "00":
		ox()
		Aex()
	else:
		Er()
		Toolx()


def Tool_X():
	try:
		Toolx()

	except KeyboardInterrupt:
		ox()
		Aex()
Tool_X()
